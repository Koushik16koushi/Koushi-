

Create the ProgrammingBooks Collection:
To create the ProgrammingBooks collection, use the createCollection() method. This step is
optional because MongoDB will automatically create the collection when you insert data into it, but
you can explicitly create it if needed:
db.createCollection(
INSERT operations
a. Insert 5 Documents into the ProgrammingBooks Collection :
Now, insert 5 documents representing programming books into the ProgrammingBooks collection
using the insertMany () method:

*Insert a Single Document into ProgrammingBooks:

Use the insertOne() method to insert a new document into the ProgrammingBooks collection:
db.ProgrammingBooks.insertOne({
title: "The Pragmatic Programmer: Your Journey to Mastery",
author: "David Thomas, Andrew Hunt",
category: "Software Development",
year: 1999})
Read (Query) Operations
a. Find All Documents
To retrieve all documents from the ProgrammingBooks collection:
db.ProgrammingBooks.find(). pretty ()


*Find Documents Matching a Condition
To find books published after the year 2000:
db.ProgrammingBooks.find({year: { $gt: 2000 } }). pretty ()

Update Operations
a. Update a Single Document
To update a specific book (e.g., change the author of a book):
db.ProgrammingBooks.updateOne(
{ title: "Clean Code: A Handbook of Agile Software Craftsmanship" },
{ $set: { author: "Robert C. Martin (Uncle Bob)" } }
)
//verify by displaying books published in year 2008
db.ProgrammingBooks.find({ year: { $eq: 2008 } }).pretty()


*Update Multiple Documents
To update multiple books (e.g., update the category of books published before 2010):
db.ProgrammingBooks.updateMany

Delete Operations
a. Delete a Single Document
To delete a specific book from the collection (e.g., delete a book by title):
db.ProgrammingBooks.deleteOne({ title: "JavaScript: The Good Parts" })
{ acknowledged: true, deletedCount: 1 }

You can check whether the specified document is deleted by displaying the contents of the
collection.
b. Delete Multiple Documents
To delete multiple books based on a condition (e.g., delete all books published before 1995):
db.ProgrammingBooks.deleteMany({ year: { $lt: 1995 } })
{ acknowledged: true, deletedCount: 2 }

You can check whether the specified documents were deleted by displaying the contents of the
collection.
c. Delete All Documents in the Collection:
To delete all documents in a collection (e.g., ProgrammingBooks), use the deleteMany() method
with an empty filter {}:
db.ProgrammingBooks.deleteMany({})

//verify by displaying the collection
db.ProgrammingBooks.find().pretty()
Delete the Collection Using drop():
To delete a collection named ProgrammingBooks, use the drop() method with the name of the
collection:

