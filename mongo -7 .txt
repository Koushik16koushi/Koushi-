Program 7
a. Find all listings with listing_url, name, address, host_picture_url in the listings And
Reviews collection that have a host with a picture url.

Create a database Airbnb and collection listingsAndReviews in Mongo IDE.

Add the following documents in the listingsAndReviews collection in MongoDB IDE.
{
"listing_url": "http://example.com/listing1",
"name": "Beautiful Apartment in the City",
"address": { "city": "New York", "country": "USA" },
"host": { "host_picture_url": "http://example.com/host1.jpg" }
}

{
"listing_url": "http://example.com/listing2",
"name": "Cozy Cottage",
"address": { "city": "Austin", "country": "USA" },
"host": { "host_picture_url": "http://example.com/host2.jpg" }
}

In MongoDB Shell
>use Airbnb
db.listingsAndReviews.aggregate([
{ $match: { "host.host_picture_url": { $exists: true, $ne: null } } },
{
$project: {
listing_url: 1,
name: 1,
address: 1,
host_picture_url: "$host.host_picture_url" }
}])

Output:

b. Using E-commerce collection write a query to display reviews summary.

Create a database CommerceDB and collection reviews in Mongo IDE.

Add the following documents in the reviews collection in MongoDB IDE.
{
"product_id": 1,
"product_name": "Wireless Mouse",
"review_id": 101,
"review_text": "Great mouse, very responsive.",

"rating": 5
}

{
"product_id": 1,
"product_name": "Wireless Mouse",
"review_id": 102,
"review_text": "Good value for the price.",
"rating": 4
}

{
"product_id": 2,
"product_name": "Bluetooth Keyboard",
"review_id": 202,
"review_text": "Compact and portable.",
"rating": 4
}

{
"product_id": 3,
"product_name": "USB-C Hub",
"review_id": 302,
"review_text": "Works well with my laptop.",
"rating": 5
}

In MongoShell
>use CommerceDB
Query to Display Reviews Summary
db.reviews.aggregate([
{
$group: {
_id: "$product_id",
product_name: { $first: "$product_name" },
total_reviews: { $sum: 1 },
average_rating: { $avg: "$rating" },
latest_reviews: {
$push: {

review_id: "$review_id",
review_text: "$review_text",
rating: "$rating",
}
}
}
},
{
$project: {
product_id: "$_id",
product_name: 1,
total_reviews: 1,
average_rating: "$average_rating",
latest_reviews: {
$slice: ["$latest_reviews", -3] // Adjust the number of latest reviews as needed
}
}
},
{
$sort: { total_reviews: -1 } // Sort by total reviews in descending order
}
])

Output:

